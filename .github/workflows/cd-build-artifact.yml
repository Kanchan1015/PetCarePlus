name: Artifact - Build & Push to GHCR

on:
  workflow_dispatch: # manual trigger only
    inputs:
      tag:
        description: 'Version tag for the image (example: v1.0.0)'
        required: true
        default: 'latest'

permissions:
  contents: read
  packages: write   # required for pushing to GHCR

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the prod branch
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: prod

      # Step 2: Setup .NET for backend build
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Step 3: Setup Node.js for frontend build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # Step 4: Build backend
      - name: Restore dependencies
        run: dotnet restore VetApi.sln

      - name: Build backend
        run: dotnet publish VetApi.sln -c Release -o out

      # Step 5: Build frontend
      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      # Step 6: Log in to GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/vetapi
          VERSION=${{ github.event.inputs.tag }}
          docker build -t $IMAGE_NAME:$VERSION -t $IMAGE_NAME:latest .

      # Step 8: Push Docker image
      - name: Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/vetapi
          VERSION=${{ github.event.inputs.tag }}
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest
