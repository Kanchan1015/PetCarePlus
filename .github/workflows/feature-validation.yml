name: Feature Branch Validation

on:
  push:
    branches: 
      - 'feat/*'
      - 'fix/*'
      - 'hotfix/*'
    paths:
      - '**'

jobs:
  validate-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run Unit Tests
      env: 
        ASPNETCORE_ENVIRONMENT: Testing
      run: |
        dotnet test ./tests/PetCare.Api.Tests/PetCare.Api.Tests.csproj --no-build --configuration Release --verbosity normal
        dotnet test ./tests/PetCare.Application.Tests/PetCare.Application.Tests.csproj --no-build --configuration Release --verbosity normal
        dotnet test ./tests/PetCare.Domain.Tests/PetCare.Domain.Tests.csproj --no-build --configuration Release --verbosity normal

    - name: Run Integration Tests
      env:
        ASPNETCORE_ENVIRONMENT: Testing
      run: dotnet test ./tests/PetCare.Integration.Tests/PetCare.Integration.Tests.csproj --no-build --configuration Release --verbosity normal

  validate-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      env:
        VITE_API_BASE_URL: http://localhost:5002/api
        VITE_FEATURE_AUTH_ROUTING: true
      run: npm run build

    - name: Run frontend linting
      continue-on-error: true
      run: npm run lint

  validation-summary:
    runs-on: ubuntu-latest
    needs: [validate-backend, validate-frontend]
    if: always()
    
    steps:
    - name: Check results
      run: |
        if [ "${{ needs.validate-backend.result }}" = "success" ] && [ "${{ needs.validate-frontend.result }}" = "success" ]; then
          echo "✅ All validation checks passed!"
          echo "## ✅ Feature Validation Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Backend tests: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend build: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend linting: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Some validation checks failed!"
          echo "## ❌ Feature Validation Failed" >> $GITHUB_STEP_SUMMARY
          echo "- Backend tests: ${{ needs.validate-backend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend build: ${{ needs.validate-frontend.result }}" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi